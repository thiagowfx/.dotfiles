" Vim config file
"
" Reload vimrc:
"   :so %
"   :so $MYVIMRC
"
" Idempotent vim reload:
"   if has('vim_starting') ...
"
" Open vim without vimrc:
"   $ vim -u NONE
"   $ vim --clean
"
" List all keybind mappings:
"   :map, :nmap, :vmap, :imap
"   :verbose <map>
"
" Open command history:
"   :<C-f>

" Load vim defaults.
" :h skip_defaults_vim
unlet! skip_defaults_vim
source $VIMRUNTIME/defaults.vim

" Set leader key. Default is '\'.
let mapleader=","

" Initialize plugin manager: vim-plug
call plug#begin('~/.vim/plugged')

" Better defaults
Plug 'tpope/vim-sensible'

" Automatically follow symlinks, helpful for ~/.dotfiles
"   vim-bbye: optional dependency to consistenly wipe buffers without impacting the windows order
Plug 'moll/vim-bbye'
Plug 'aymericbeaumet/vim-symlink'

" Miscellaneous features:
"   Cursor shape change in insert and replace mode
"   Improved mouse support
"   Focus reporting: plays well with tmux and terminal
"   Bracketed paste: automatically handles :set paste
Plug 'wincent/terminus'

" Highlight trailing whitespace.
"
" Fix all occurrences:
"   :FixWhitespace
Plug 'bronson/vim-trailing-whitespace'

" Color theme / scheme
Plug 'crusoexia/vim-monokai'

" Minimalist statusline / tabline.
Plug 'itchyny/lightline.vim'

" The colorscheme of lightline is independent of the editor colorscheme.
"   'One' provides sensible defaults and works in 8-color mode (Linux TTY).
let g:lightline = {
      \ 'colorscheme': 'one',
      \ }

" Display thin vertical lines at each indentation level for code indented with spaces.
"   :IndentLinesToggle
Plug 'Yggdroot/indentLine'

" Async VCS info: git, hg, etc
Plug 'mhinz/vim-signify'

" Git wrapper
Plug 'tpope/vim-fugitive'
command! Gadd Gwrite
command! Gdiff Gdiffsplit
command! GDiff Gdiffsplit

" A better vimdiff mergetool: 2-way diff.
"   ~/.gitconfig is set up to use this plugin.
"   :DiffConflicts
Plug 'whiteinge/diffconflicts', {'on': 'DiffConflicts'}

" Single-line <-> multi-line statements.
"   gS to split
"   gJ to join
Plug 'AndrewRadev/splitjoin.vim'

" ALE: Asynchronous Lint Engine:
"   Syntax checking and semantic errors
"   Language Server Protocol (LSP) client
"
" Apply linter fixes:
"   :ALEFix
Plug 'dense-analysis/ale'

" Toggle comment blocks.
"   gcc to comment out the current line
"   gc to comment out in visual mode or the target of a motion
"   gcgc to uncomment a set of adjacent lines
Plug 'tpope/vim-commentary'

" Automatically adds `end`, `fi`, etc.
Plug 'tpope/vim-endwise'

" Helpers for unix
Plug 'tpope/vim-eunuch', {'on': ['Delete', 'Remove', 'SudoWrite']}

" Smarter '.' repeat
Plug 'tpope/vim-repeat'

" Heuristically infers tabs and spaces settings, so that there's no need to
" specify them in ~/.vimrc.
Plug 'tpope/vim-sleuth'

" Complimentary pairs of mappings.
"   ]n and [n to jump between SCM conflict markers.
Plug 'tpope/vim-unimpaired'

" Improved file manager.
"   Activate with '-' (hyphen) key.
Plug 'tpope/vim-vinegar'

" Comment alignment plugin.
"   :EasyAlign <delimiter>
"
" E.g.
"   Visual selection mode, :EasyAlign #
Plug 'junegunn/vim-easy-align', {'on': 'EasyAlign'}

" :FZF for vim.
Plug 'junegunn/fzf.vim', {'on': 'FZF'}

" OSC52 integration for system clipboard.
"   C-c to copy to system clipboard.
Plug 'fcpg/vim-osc52'
vmap <C-c> y:Oscyank<cr>

" Open file.ext:line:col at the appropriate line and col.
Plug 'wsdjeg/vim-fetch'

call plug#end()

" Better %
runtime! macros/matchit.vim

" :Man man
source $VIMRUNTIME/ftplugin/man.vim

" Set color theme / scheme
" Inspect $TERM instad of t_Co as it works in neovim as well
if &term =~ '256color'
  " Enable true (24-bit) colors instead of (8-bit) 256 colors.
  " :h true-color
  if has('termguicolors')
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
    set termguicolors
  endif
  colorscheme monokai
else
  colorscheme slate
endif

" :w misspellings
command! W w
command! WQ wq
command! Wq wq

" copy until the end of the line, default behavior copies the entire line
nnoremap Y y$

" Add horizontal cursor line.
set cursorline

" Always use vertical diffs.
set diffopt+=vertical

" Disable fold.
set nofoldenable

" Highlight search pattern matches.
set hlsearch

" https://stackoverflow.com/a/2288438/1745064
set ignorecase smartcase

" Use one space, not two, after punctuation.
set nojoinspaces

" Do not redraw the screen while executing macros. To force, use :redraw.
set lazyredraw

" Display tab characters.
" https://vi.stackexchange.com/questions/422/displaying-tabs-as-characters
set list lcs=tab:\|\ 

" --INSERT-- is not necessary because
"   - Cursor shape changes,
"   - Lightline already displays it.
set noshowmode

" Disable backups and swapfile, use persistent undo instead.
set noswapfile nowritebackup

" Show line numbers.
set number
set relativenumber

" Simplify some display messages.
set shortmess=atI

" Display indicators for lines that have been wrapped.
let &showbreak = '> '

" Show matching brackets, briefly jump to the matched one.
set showmatch

" Smart autoindent when starting a new line.
set smartindent

" Better splits.
set splitbelow splitright switchbuf=useopen

" Shorter update time (default: 4s) for async vim operations.
set updatetime=1000

" Enable persistent undo file.
if has('persistent_undo')
  set undofile undodir=~/.cache/vim/undo/
endif

" Set completion mode.
set wildmode=list:longest

" https://thoughtbot.com/blog/5-useful-tips-for-a-better-commit-message
autocmd Filetype gitcommit setlocal spell textwidth=72

" Load corp configs if any.
silent! source ~/.vim/vimrc_corp
