set nocompatible

let mapleader=","
let g:mapleader=","
inoremap jj <ESC>

" vim-plug {{{
call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sensible'      " better defaults
Plug 'nanotech/jellybeans.vim' " color theme
Plug 'itchyny/lightline.vim' | let g:lightline = {'colorscheme': 'jellybeans'}

Plug 'bling/vim-bufferline'
Plug 'dietsche/vim-lastplace'          " remember cursor positions
Plug 'mhinz/vim-signify'               " gutter
Plug 'wincent/terminus'                " mouse, bracketed paste, focus reporting, insert cursor
Plug 'docunext/closetag.vim'           " automatically closes HTML tags </
Plug 'Yggdroot/indentLine'             " displays indention levels with thin vertical lines
Plug 'vim-syntastic/syntastic'         " syntax checking, static
Plug 'maxbrunsfeld/vim-yankstack' | nmap <leader>p <Plug>yankstack_substitute_older_paste

Plug 'chrisbra/csv.vim',      {'for': 'csv'}
Plug 'editorconfig/editorconfig-vim'
Plug 'sheerun/vim-polyglot'  " multiple lazily-loaded language packs
Plug 'skammer/vim-css-color', {'for': 'css'}

Plug 'junegunn/fzf',            {'on': 'FZF', 'do': './install --bin'}
Plug 'junegunn/vim-easy-align', {'on': 'EasyAlign'}
Plug 'junegunn/goyo.vim',       {'on': 'Goyo'}
Plug 'tpope/vim-commentary'     " gcc, <visual>gc
Plug 'tpope/vim-endwise'        " automatically adds `end`, `fi`, etc
Plug 'tpope/vim-eunuch',        {'on': ['Rename', 'Remove', 'SudoEdit', 'SudoWrite']}
Plug 'tpope/vim-sleuth'         " automatically infers tabs and spaces settings
Plug 'tpope/vim-surround'       " ds', cs'<
Plug 'tpope/vim-repeat'         " .
Plug 'tpope/vim-vinegar'        " -, file manager
Plug 'mileszs/ack.vim',         {'on': ['Ack', 'Ag']}
Plug 'bronson/vim-trailing-whitespace', {'on': 'FixWhitespace'}
Plug 'vim-scripts/matchit.zip'  " %
Plug 'lygaret/autohighlight.vim'

call plug#end()
" }}}

" colorscheme {{{
if &t_Co >= 256 || has("gui_running")
        colorscheme jellybeans
        hi Normal ctermbg=none
        hi NonText ctermbg=none
endif
" }}}

" undo {{{
if has('persistent_undo')
        set undofile undodir=~/.vim/undo
endif

set history=10000 undolevels=10000 undoreload=10000
" }}}

" customizations {{{
let &showbreak = '> '
set autochdir autoread
set backspace=indent,eol,start
set cursorline nocursorcolumn
set encoding=utf-8
set foldmethod=syntax foldlevel=0 foldnestmax=2 nofoldenable " folding
set incsearch hlsearch wrapscan ignorecase infercase smartcase smartindent
set lazyredraw ttyfast
set noswapfile nobackup nowb " backups and swapfile
set number scrolloff=5 shortmess=atI
set showcmd showmatch showmode
set splitbelow splitright swb=useopen
set visualbell errorbells " bells and whistles
set wildmode=list:longest wildignore+=*/.git,*/.hg,*/.svn,*/.DS_Store

" comment joins
if v:version > 703 || v:version == 703 && has('patch541')
        set formatoptions+=j
endif
" }}}

execute "silent! source ~/.vim/vimrc_corp"

" vim: fdm=marker et
