# This function sets an environment variable iff its correlated program
# is installed and/or if a given file exists on the system.
#
# Arguments:
#  $1: the environment variable (e.g. EDITOR)
#  $2: its value
#  $3: a program (e.g. vim or /usr/bin/vim)
#  $4: a file (e.g. $HOME/directory)
#
addenv() {
    [[ "x$3" != "x" ]] && ! command -v "$3" &>/dev/null && return
    [[ "x$4" != "x" ]] && [ ! -e "$4" ] && return
    export "$1"="$2"
}

# editor
addenv EDITOR "vim" vim
addenv VISUAL "$EDITOR"

# less: with colors
addenv LESS "-R" less

# man: don't clear the screen
addenv MANPAGER "less -X" less

# manpage paths
addmanpath() {
    addenv MANPATH "$1:$MANPATH" "$2" "${3:-$1}"
}
command -v brew &>/dev/null && addmanpath "$(brew --prefix coreutils)/libexec/gnuman" brew

# google test: use colors
addenv GTEST_COLOR "YES"

# asp (https://github.com/falconindy/asp) for Arch Linux
addenv ASPROOT "$HOME/.asp" asp

# paths
addpath() {
    addenv PATH "$1:$PATH" "$2" "${3:-$1}"
}

addpath "$HOME/.bin"
addpath "/usr/lib/ccache/bin" ccache
addpath "$(ruby -rubygems -e "puts Gem.user_dir")/bin" ruby
command -v brew &>/dev/null && addpath "$(brew --prefix coreutils)/libexec/gnubin" brew

# wine
addwine() {
    addenv "$1" "$2" wine
}

addwine WINEARCH "win32"
addwine WINEDEBUG "fixme-all"
addwine WINEDLLOVERRIDES "winemenubuilder.exe=d"
addwine WINEPREFIX "$HOME/.winepref"
