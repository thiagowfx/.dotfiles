# -*- shell-script -*-

# environment variables
export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=lcd'
export DEBFULLNAME="$($HOME/_scripts/packager name)"
export DEBEMAIL="$($HOME/_scripts/packager mail)"
export EDITOR="vim"
export GOPATH="$HOME/.go"
export PATH="$GOPATH/bin:$PATH"
export GTEST_COLOR="YES"
export HISTCONTROL=ignoreboth
export PATH="$HOME/bin:$PATH"
export RAMDISK="$HOME/Ramdisk"
[[ $TMUX = "" ]] && export TERM="rxvt-256color"
export VISUAL="vim"
export WINEARCH="win32"
export WINEDEBUG="fixme-all"
export WINEDLLOVERRIDES="winemenubuilder.exe=d"
export WINEPREFIX="$HOME/.wine"

alias chmod="chmod -v"
alias chown="chown -v"
which colordiff &>/dev/null && alias colordiff="colordiff -uN"
which colordiff &>/dev/null && alias diff="colordiff -uN"
which cower     &>/dev/null && alias cower="cower --color=always --sort=votes --target=$HOME/.aur"
alias cp="cp -v"
alias ctest="ctest -V"
alias curl="curl -v -L"
alias df='df -h'
alias du="du -h"
alias em="emacsclient -t"
alias emq="emacsclient -c"
alias free="free -h"
alias gdb="gdb -q"
alias grep="grep --color=always"
alias hexdump="hexdump -C"
which inxi &>/dev/null && alias inxi="inxi -F -M"
alias less="less -R"
alias ln="ln -v"
alias lspci="lspci -v"
alias lsusb="lsusb -t"
alias make="time make -j$(nproc) -l$(nproc)"
alias mkdir="mkdir -p"
alias mv="mv -v"
alias netstat="netstat -pln"
which pacaur &>/dev/null && alias pacaur="pacaur --noconfirm --noedit"
which pacman &>/dev/null && alias pacma="pacman"
alias pgrep="pgrep -afl"
alias pingg="ping google.com"
alias pythonn="python -i -c 'from math import *'"
alias reflector="reflector -x rsync"
alias rsync="rsync --progress"
alias sl="ls"
alias smem="smem -k"
alias strace="strace -t"

# templates
alias android-emulator-t-start="emulator -avd "Intel-10-480x800" -qemu --enable-kvm -dns-server 8.8.8.8,8.8.4.4"
alias docker-t-pa="sudo docker run -v /dev/dri:/dev/dri:rw -v /tmp/.X11-unix/X0:/tmp/.X11-unix/X0:rw -t -i --privileged thiagowfx/portable-arch /bin/bash"
alias ffmpeg-t-screencast="ffmpeg -f x11grab -s wxga -r 30 -i :0.0 -qscale 0 ${RAMDISK}/out.mpg"
alias jekyll-t-serve="jekyll serve --baseurl='' --watch"
alias pacman-t-extrapkgs="comm -23 <(pacman -Qeq|sort) <(pacman -Qgq base base-devel|sort)"
alias qemu-t-iso="qemu-system-x86_64 --enable-kvm -m 512M -cdrom"
alias wget-t-pdf="wget -e robots=off -A pdf -mpEkK -np -t inf -T 60 --"
alias wget-t-spider="wget -e robots=off --wait=2 --random-wait --recursive --span-hosts --spider --timestamping --tries=5 --dns-timeout=30 --connect-timeout=5 --read-timeout=5 --level=10 --"
alias winetricks-t-install="winetricks corefonts flash vcrun2005 vcrun2008 vb6run"
alias waur="pacaur -Syua --noedit"
alias world="sudo pacman -Syu"
alias world-t-apt="sudo aptitude update && sudo aptitude upgrade && sudo aptitude full-upgrade"
alias world-t-portage='su -c "emerge --sync && emerge -avuDN --with-bdeps y --keep-going @world && emerge -v --depclean && revdep-rebuild -v && dispatch-conf && etc-update && eclean -d distfiles"'
alias xrandr-t-hdmi-on="xrandr --output LVDS1 --primary --output HDMI1 --auto --left-of LVDS1"
alias xrandr-t-hdmi-off="xrandr --output HDMI1 --off"
alias xrandr-t-hdmi-mirror="xrandr --output LVDS1 --primary --auto --output HDMI1 --auto --same-as LVDS1"
alias xrandr-t-reset="xrandr --output LVDS1 --primary --mode 1366x768"
alias youtube-dl-t-mp3="youtube-dl --continue --title --restrict-filenames --extract-audio --audio-format mp3"
alias youtube-dl-t-video="youtube-dl --continue --title --restrict-filenames"

# adbsync for android
adbsync() {
    if [[ ! -d "$1" ]]; then
        cat <<EOF
Usage: adbsync <localdir>
Example: adbsync $HOME/tvseries
EOF
        return 0
    fi
    local TARGET_DIR="/storage/sdcard1/adbsync"
    adb wait-for-device
    adb shell "[[ ! -d $TARGET_DIR ]] && mkdir -p $TARGET_DIR"
    adb push "$1" "$TARGET_DIR/$(basename $1)" && echo "Files successfully copied."
}

# chroot gentoo style
gentoo-chroot() {
    [[ "$1" == "" ]] && echo "Example usage:\ngentoo-chroot /mnt/gentoo" && return 0
    [[ ! -d "$1"  ]] && echo "Your specified path $1 doesn't exist" && return 1
    sudo cp -L /etc/resolv.conf "$1"/etc/resolv.conf
    sudo mount -o bind /proc "$1"/proc
    sudo mount --rbind /dev  "$1"/dev
    sudo mount --rbind /sys  "$1"/sys
    sudo chroot "$1/" /bin/env -i TERM=$TERM /bin/bash
}

# gitignore
# Example usage: gi emacs,vim,c
gi() { curl "http://www.gitignore.io/api/$@"; }

gocd() { cd `go list -f '{{.Dir}}' $1`; }

# golang bootstrapping
gobootstrap() {
  go get github.com/golang/lint
  go get github.com/nsf/gocode
}

# pacman qkkdiffs
pacman-qkkdiff-file() {
    if [[ "$1" == "" ]]; then
        cat <<EOF
Usage: qkkdiff-file <file>
Purpose: get the changes between this file now and in the upstream package
Example: qkkdiff-file /etc/pacman.conf"
EOF
    elif [[ -f "$1" ]]; then
        pkg="$(pacman -Qo $1 | awk '//{printf "%s-%s", $(NF-1), $NF;}')"
        bsdtar -xOf /var/cache/pacman/pkg/${pkg}-$(uname -m).pkg.tar.xz "${1/\//}" | diff - "$1"
        return 0
    else
        echo "The provided file \e[0;31m${1}\e[0m does not exist."
        return 1
    fi
}

pacman-qkkdiff-pkg() {
    if [[ "$1" == "" ]]; then
        echo <<EOF
Usage: qkkdiff <package>
Purpose: get the changes between the upstream package and the files on the filesystem
Example: qkkdiff pacman
EOF
    elif ! pacman -Q "$1"; then
        return 1
    else
        ver=$(pacman -Q "$1" | cut -f2 -d' ')
        pacman -Qkkq "$1" | while read package file; do echo $file; bsdtar -xOf /var/cache/pacman/pkg/${package}-${ver}-$(uname -m).pkg.tar.xz ${file/\//} | diff - $file  ; done
        return 0
    fi
}

# proxy
function proxy_on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"

    if (( $# > 0 )); then
        valid=$(echo $@ | sed -n 's/\([0-9]\{1,3\}.\)\{4\}:\([0-9]\+\)/&/p')
        if [[ $valid != $@ ]]; then
            >&2 echo "Invalid address"
            return 1
        fi

        export http_proxy="http://$1/"
        export https_proxy=$http_proxy
        export ftp_proxy=$http_proxy
        export rsync_proxy=$http_proxy
        export HTTP_PROXY=$http_proxy
        export HTTTS_PROXY=$http_proxy
        export FTP_PROXY=$http_proxy
        export RSYNC_PROXY=$http_proxy
        echo "Proxy environment variable set."
        return 0
    fi

    echo -n "username: "; read username
    if [[ $username != "" ]]; then
        echo -n "password: "
        read -es password
        local pre="$username:$password@"
    fi

    echo -n "server: "; read server
    echo -n "port: "; read port
    export http_proxy="http://$pre$server:$port/"
    export https_proxy=$http_proxy
    export ftp_proxy=$http_proxy
    export rsync_proxy=$http_proxy
}

function proxy_off(){
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
    unset rsync_proxy
    echo -e "Proxy environment variable removed."
}
