[user]
	name = Thiago Perrotta
	email = tbperrotta@gmail.com

# This setup will always prompt for the password.
#   https://git-scm.com/docs/git-send-email
#   https://git-send-email.io/
[sendemail]
	annotate = yes
	smtpEncryption = tls
	smtpServer = smtp.gmail.com
	smtpServerPort = 587
	smtpUser = tbperrotta@gmail.com

[alias]
	# keep-sorted start
	bd = !branch="$(git branch --show-current)" && git checkout master && git branch -D "${branch:-$1}"
	cp = cherry-pick
	dc = diff --cached
	desc = commit --allow-empty -n
	emerge = !git add -A . && git amend -n && git pushm -f
	nb = switch --create
	nbt = !git nb "thiagowfx/$(shuf -n1 /usr/share/dict/words | tr '[:upper:]' '[:lower:]')"
	pullm = !git pull $(git remote | head -1) $(git branch --show-current):$(git branch --show-current)
	pushm = !git push $(git remote | head -1) $(git branch --show-current):$(git branch --show-current)
	rb = branch -m
	rbi = rebase -i HEAD~10
	rc = rebase --continue
	st = status
	su = submodule update
	world = !git fetch --all && git remote prune origin
	# keep-sorted end

	# usage: git ignore go,hugo,vim >> .gitignore
	ignore = !curl -L -s "https://www.gitignore.io/api/$@"

	# log: there's also gitk and tig
	l = log --graph --pretty=oneline --abbrev-commit --all
	xl = branch -vv

	# hg/fig/depot_tools compatibility
	# keep-sorted start
	amend = commit --amend --no-edit
	purge = clean -f -d
	recommit = commit --reedit-message ORIG_HEAD
	reword = commit --allow-empty --amend -n
	root = rev-parse --show-toplevel
	shelve = stash
	squash-branch = "!n=$(expr $(git rev-list HEAD ^master --count) - 1); git reset --soft HEAD~$n; COMMIT_MSG=$(git log --format=%B --reverse HEAD..HEAD@{1}); git commit --edit -m\"$COMMIT_MSG\""
	udiff = !git diff $(git show-branch --merge-base HEAD 2>/dev/null)~1
	uncommit = !git reset --soft HEAD^ && git restore --staged .
	unshelve = stash apply
	unstash = stash apply
	# keep-sorted end

[apply]
	# Detect whitespace errors when applying a patch.
	whitespace = fix

[branch]
	autosetupmerge = always
	autosetuprebase = always
	sort = -committerdate

[commit]
	verbose = true

[core]
	# Auto-convert CRLF <-> LF for a transparent experience on Windows.
	autocrlf = input
	excludesfile = ~/.gitignore_global
	editor = vim
	# Alternative for diff-highlight: git-delta
	pager = "(diff-highlight 2>/dev/null || cat) | ${PAGER:-less}"

[credential]
	# Cache credentials in memory for a while. See git-credential-cache(1).
	helper = cache

# https://git-scm.com/docs/diff-config
[diff]
	algorithm = histogram
	# Make it easier to distinguish moved snippets of code within the same file.
	colorMoved = default
	colorMovedWs = "allow-indentation-change"
	# Do not show "a/" "b/", allows file navigation when supported
	noPrefix = true
	# Detect copies in addition to renames
	renames = copies
	# A la `git submodule summary`
	submodule = log

[fetch]
	prune = true

[format]
	# Automatically sign-off patches when using format-patch.
	signoff = true

[help]
	autocorrect = 1

[http]
	# Needed for Gerrit authentication/integration
	cookiefile = ~/.gitcookies

[init]
	# master or main
	defaultBranch = master

[merge]
	prompt = true
	tool = diffconflicts

[mergetool]
	keepBackup = false

# https://github.com/whiteinge/diffconflicts
[mergetool "diffconflicts"]
	cmd = vim -c DiffConflicts \"$MERGED\" \"$BASE\" \"$LOCAL\" \"$REMOTE\"
	trustExitCode = true

[pull]
	rebase = true

[push]
	autoSetupRemote = true
	default = current
	followTags = true

# https://git-scm.com/docs/git-rebase
[rebase]
	# https://thoughtbot.com/blog/autosquashing-git-commits
	autoSquash = true
	# https://cscheng.info/2017/01/26/git-tip-autostash-with-git-pull-rebase.html
	autoStash = true
	# https://github.blog/2022-10-03-highlights-from-git-2-38/
	updateRefs = true

# https://git-scm.com/docs/git-rerere
[rerere]
	autoUpdate = true
	enabled = true

[status]
	# Show individual files in untracked directories.
	showUntrackedFiles = all

[submodule]
	# Clone new submodules in parallel with as many jobs.
	fetchJobs = 0

[url "git@github.com:"]
	pushInsteadOf = "https://github.com/"

# Import corp configs if any.
[include]
	path = .gitconfig_corp
